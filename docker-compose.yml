services:
  twitter_db:
    image: postgres:15
    container_name: twitter_db
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_LOGGING: "true"
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - twitter_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - twitter_network

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: web
    env_file: .env
    ports:
      - "${APP_PORT}:8000"
    networks:
      - twitter_network
    depends_on:
      twitter_db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app:z
    

networks:
  twitter_network:
    driver: bridge 

volumes:
  postgres_data: