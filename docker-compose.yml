services:
  twitter_db:
    image: postgres:15
    container_name: twitter_db
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_LOGGING: "true"
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - twitter_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - twitter_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: web
    env_file: .env
    depends_on:
      twitter_db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "${APP_PORT}:8000"
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=mini_twitter.settings
      - DEBUG=${DEBUG}
      - DATABASE_URL=postgres://postgres:postgres@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    stdin_open: true
    tty: true

networks:
  twitter_network:
    driver: bridge 

volumes:
  postgres_data: